---
interface Props {
  nameProject: string;
  frontRepo?: string;
  backRepo?: string;
  uniqueRepo?: string;
  date: string;
  technologyStack: Array<(props: { width: string; height: string }) => any>;
  content: string;
  numImages: number;
}

const {
  nameProject,
  frontRepo,
  backRepo,
  uniqueRepo,
  date,
  technologyStack,
  content,
  numImages,
} = Astro.props;
---

<article class="project-card">
  <figure>
    <img
      src={`/images/${nameProject}/0.png`}
      alt={nameProject.replaceAll("_", " ") + " cover"}
    />
  </figure>
  <div class="project-content">
    <div class="title-project">
      <h4>{nameProject.replaceAll("_", " ")}</h4>
      <div>
        {
          frontRepo && (
            <a href={frontRepo} title="Frontend Repository">
              <i class="fa-brands fa-github" />
            </a>
          )
        }
        {
          backRepo && (
            <a href={backRepo} title="Backend Repository">
              <i class="fa-brands fa-github" />
            </a>
          )
        }
        {
          uniqueRepo && (
            <a href={uniqueRepo} title="Repository">
              <i class="fa-brands fa-github" />
            </a>
          )
        }
      </div>
    </div>
    <div class="info-project">
      <time>{date}</time>
      <div class="technologies-stack">
        {technologyStack.map((Tech) => <Tech width="25" height="25" />)}
      </div>
    </div>
    {
      content.split("\n").map((paragraph) => (
        <p>
          {paragraph.split("<span>").map((text) => {
            if (text.includes(">")) {
              return <span>{text.replace(">", "")}</span>;
            }
            return text;
          })}
        </p>
      ))
    }
    <button
      class="btn-images"
      data-name_project={nameProject}
      data-length={numImages}
    >
      View Images <i class="fa-regular fa-image"></i>
    </button>
  </div>
</article>

<style>
  .title-project {
    display: flex;
    justify-content: space-between;
    h4 {
      font-size: 2rem;
    }
    a {
      color: white;
      text-decoration: none;
      background: black;
      border-radius: 15px;
      transition: 0.3s;
      font-size: 1.6rem;
      padding: 0 0.3rem;
    }
    div {
      display: flex;
      gap: 0.5rem;
    }
  }

  .info-project {
    display: flex;
    margin: 0.5rem 0;
    justify-content: space-between;
    align-items: center;
    time {
      font-size: 0.8rem;
      color: #7cfdb8;
      text-transform: uppercase;
    }
    svg {
      transition: 0.3s;
    }
  }

  .technologies-stack {
    display: flex;
    gap: 1rem;
  }

  .title-project a:hover,
  .info-project svg:hover {
    scale: 1.1;
  }

  .project-content {
    display: flex;
    flex-direction: column;
    padding: 1.5rem;
  }

  .project-card {
    background-color: rgb(15 23 42);
    border-radius: 25px;
    padding: 0.5rem;
    color: white;
    overflow: hidden;
    p {
      font-size: 1rem;
      line-height: 1.5;
      font-weight: 300;
      margin-bottom: 0.5rem;
      span {
        color: rgb(77, 210, 255);
        font-weight: 700;
      }
    }
    ul {
      padding-left: 1rem;
      font-size: 1rem;
    }
    figure {
      border-radius: 20px;
      overflow: hidden;
      margin: 0;
      display: flex;
    }
    img {
      width: 100%;
      transition: 0.4s;
    }
  }

  .project-card:hover img {
    transform: scale(1.05);
    filter: brightness(1.1);
  }

  .btn-images {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin-top: 1rem;
    border-radius: 5px;
    border: none;
    padding: 0.3rem;
    width: 9rem;
    background: #06cf67;
    color: white;
    cursor: pointer;
    font-size: 1rem;
    transition: 0.3s;
  }

  .btn-images:hover {
    background: #09723d;
  }

  @media (max-width: 1250px) {
    .title-project,
    .info-project {
      flex-direction: column;
      gap: 1rem;
      align-items: center;
      text-align: center;
    }
  }
</style>
